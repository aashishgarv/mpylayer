#labels Featured
= Features =

  * Dynamic commands loading. Check AvailableCommandsAndProperties.
  * Nice, descriptive error messages
  * Attribute boundary checks
  * Asynchronous operation by using select.


= Code example =

== Pythonic access to attributes and methods ==
{{{
mp = mpylayer.MPlayerControl()
mp.loadfile('/path/to/some_music.mp3')
mp.pause()
print mp.filename
# result: some_music.mp3
print mp.length # in seconds
# result: 234.0
print mp.time_pos
# result: 2.7766540000000002
mp.percent_pos = 50 # move to 50% of the file.
}}}

== Good error messages: ==
{{{
mp.loadfile()
Traceback (most recent call last):
...
TypeError: loadfile takes ['String', '[Integer]'] arguments - String not given in ()

mp.volume = 110
Traceback (most recent call last):
...
ValueError: volume value can't be more than 100.0
}}}


>>> mp.time_pos
21.945650000000001
>>> mp.pause()
>>> mp.pause()
>>> mp.quit()
'\x1b[A\r\x1b[K\n\nExiting... (Quit)\n'
}}}